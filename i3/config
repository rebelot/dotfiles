# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Berkeley Mono Regular 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
# exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
# Todo, fancy rofi switcher
bindsym $mod+Escape exec xflock4

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
# exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3blocks
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Battery
# exec --no-startup-id cbatticon

# Audio
# exec --no-startup-id pasystray

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
bindsym $mod+Return exec kitty
bindsym $mod+Shift+Return exec kitty --class floating
for_window [class="floating"] floating enable

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
bindsym $mod+space exec "rofi -modi drun,run -show drun -show-icons"
bindsym Mod1+Tab exec "rofi -show window -show-icons"
bindsym $mod+Control+p exec passmenu
bindsym $mod+period exec "xdg-open \\"$(fd | rofi -dmenu -i -p files)\\""

# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
bindsym $mod+Shift+c move absolute position center

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right


# Use layout toggle split, layout stacking, layout tabbed, layout splitv or
# layout splith to change the current container layout to splith/splitv,
# stacking, tabbed layout, splitv or splith, respectively. Specify up to four
# layouts after layout toggle to cycle through them.
# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout toggle stacking tabbed
# toggle between splith/splitv
bindsym $mod+e layout toggle split

# Toggle the orientation of the split container if it contains a single window.
# Otherwise it makes the current window a split container with opposite
# orientation compared to the parent container.
bindsym $mod+x split toggle

# split in horizontal orientation
bindsym $mod+Control+s split h

# split in vertical orientation
bindsym $mod+Control+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# toggle tiling / floating
bindsym $mod+t floating toggle

# toggle sticky mode
bindsym $mod+y sticky toggle

# change focus between tiling / floating windows
# when focusing floating windows, use right/left to cycle
bindsym $mod+semicolon focus mode_toggle

# Automatically sets focus to the adjacent container. If sibling is specified,
# the command will focus the exact sibling container, including non-leaf
# containers like split containers. Otherwise, it is an automatic version of
# focus left|right|up|down in the orientation of the parent container. 
bindsym $mod+bracketright focus next
bindsym $mod+bracketleft focus prev
bindsym $mod+Shift+bracketright focus next sibling
bindsym $mod+Shift+bracketleft focus prev sibling

# focus the parent container
bindsym $mod+o focus parent

# focus the child container
bindsym $mod+i focus child

# small window for videos
bindsym $mod+u fullscreen disable; floating enable; resize set 800 450; sticky enable; move position 870 25

# marks
# read 1 character and mark the current window with this character
bindsym $mod+backslash exec i3-input -F 'mark %s' -l 1 -P 'Mark: '

# read 1 character and go to the window with the character
bindsym $mod+apostrophe exec i3-input -F '[con_mark="%s"] focus' -l 1 -P 'Goto: '

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:  Browser" 
set $ws2 "2:  Terminal"
set $ws3 "3:  Mail"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

workspace_auto_back_and_forth no

# ---------- ASSIGN APPLICATION TO WORKSPACE ----------

# Assign application to start on a specific workspace
# you can find the class with the program xprop

# assign [class="firefox"] $ws1
# assign [class="alacritty"]  $ws2
assign [class="thunderbird"] $ws3
assign [class="Chromium" title="Microsoft Teams"] $ws3

for_window [all] title_window_icon on
# for_window [all] border normal 1

for_window [class="Thunar"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="xarchiver"] floating enable
for_window [class="Telegram"] floating enable
for_window [class="feh"] floating enable
for_window [class="Blueman-manager"] floating enable
for_window [class="Conky"] border pixel 0
 
hide_edge_borders smart
focus_on_window_activation focus


# ---------- ASSIGN WORKSPACE TO MONITOR ----------

# bind workspace to monitors
# workspace 1 output DP-0
# workspace 2 output DP-0
# workspace 3 output DP-0
# workspace 4 output DP-0
# workspace 5 output DP-0

# workspace 6 output DP-2
# workspace 7 output DP-2
# workspace 8 output DP-2
# workspace 9 output DP-2
# workspace 10 output DP-2

# move workspace to outpu
bindsym $mod+Shift+o move workspace to output next

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+n workspace next
bindsym $mod+p workspace prev
bindsym $mod+Tab workspace back_and_forth
bindsym --whole-window $mod+button6 workspace next
bindsym --whole-window $mod+button7 workspace prev

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# scratchpad (hidden windows)
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show

# reload the configuration file
bindsym $mod+Shift+comma reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

gaps inner 10

set $mode_gaps Gaps: (o)uter, (i)nner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

bindsym $mod+g mode "$mode_gaps"


bindsym Print exec --no-startup-id xfce4-screenshooter

# exec --no-startup-id "xrdb ~/.Xresources"
set_from_resource $black color0
set_from_resource $brightblack color8
set_from_resource $red color1
set_from_resource $brightred color9
set_from_resource $green color2
set_from_resource $brightgreen color10
set_from_resource $yellow color3
set_from_resource $brightyellow color11
set_from_resource $blue color4
set_from_resource $brightblue color12
set_from_resource $magenta color5
set_from_resource $brightmagenta color13
set_from_resource $cyan color6
set_from_resource $brightcyan color14
set_from_resource $white color7
set_from_resource $brightwhite color15

set_from_resource $foreground foreground
set_from_resource $background background
set_from_resource $cursorColor cursorColor

set_from_resource $tabline tabline
set_from_resource $tablinesel tablinesel
set_from_resource $nontext nontext

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    position top
    font pango:Berkeley Mono Regular 10
    status_command i3blocks
    workspace_min_width 40
    tray_output primary
    # tray_padding 4
    colors {
            background $background
            separator $nontext
            statusline $white
            #                         border          background      text
            focused_workspace       $black            $tablinesel     $white
            active_workspace        $black            $tablinesel     $brightmagenta
            inactive_workspace      $black            $tabline        $brightmagenta
            urgent_workspace        $red              $red            $white

    }
}

bindsym $mod+m bar mode toggle


# Color shemes for windows 
# #                       border          background      text            indicator (a line which shows where the next window will be placed)     
client.focused          $tablinesel       $tablinesel     $white          $brightgreen
client.unfocused        $tabline          $tabline        $brightmagenta  $brightgreen
client.focused_inactive $tabline          $tabline        $brightmagenta  $brightgreen
client.urgent           $red              $red            $white          $brightgreen

# Application Autostart
exec_always --no-startup-id "nitrogen --restore"
exec_always --no-startup-id "killall conky; conky"
exec_always --no-startup-id "killall picom; sleep 3; picom"

